//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConfigurationSectionDesigner
{
    
    
    /// <summary>
    /// The OAuth2LoginConfig Configuration Section.
    /// </summary>
    public partial class OAuth2LoginConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the OAuth2LoginConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string OAuth2LoginConfigSectionName = "oAuth2LoginConfig";
        
        /// <summary>
        /// The XML path of the OAuth2LoginConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string OAuth2LoginConfigSectionPath = "oAuth2LoginConfig";
        
        /// <summary>
        /// Gets the OAuth2LoginConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::ConfigurationSectionDesigner.OAuth2LoginConfig Instance
        {
            get
            {
                return ((global::ConfigurationSectionDesigner.OAuth2LoginConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::ConfigurationSectionDesigner.OAuth2LoginConfig.OAuth2LoginConfigSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuth2LoginConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuth2LoginConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Web Property
        /// <summary>
        /// The XML name of the <see cref="Web"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string WebPropertyName = "web";
        
        /// <summary>
        /// Gets or sets the Web.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Web.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuth2LoginConfig.WebPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::ConfigurationSectionDesigner.Web Web
        {
            get
            {
                return ((global::ConfigurationSectionDesigner.Web)(base[global::ConfigurationSectionDesigner.OAuth2LoginConfig.WebPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuth2LoginConfig.WebPropertyName] = value;
            }
        }
        #endregion
        
        #region Profiles Property
        /// <summary>
        /// The XML name of the <see cref="Profiles"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ProfilesPropertyName = "profiles";
        
        /// <summary>
        /// Gets or sets the Profiles.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Profiles.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuth2LoginConfig.ProfilesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::ConfigurationSectionDesigner.Profiles Profiles
        {
            get
            {
                return ((global::ConfigurationSectionDesigner.Profiles)(base[global::ConfigurationSectionDesigner.OAuth2LoginConfig.ProfilesPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuth2LoginConfig.ProfilesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesigner
{
    
    
    /// <summary>
    /// The Web Configuration Element.
    /// </summary>
    public partial class Web : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AcceptedRedirectUrl Property
        /// <summary>
        /// The XML name of the <see cref="AcceptedRedirectUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string AcceptedRedirectUrlPropertyName = "acceptedRedirectUrl";
        
        /// <summary>
        /// Gets or sets the AcceptedRedirectUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The AcceptedRedirectUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.Web.AcceptedRedirectUrlPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string AcceptedRedirectUrl
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.Web.AcceptedRedirectUrlPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.Web.AcceptedRedirectUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region FailedRedirectUrl Property
        /// <summary>
        /// The XML name of the <see cref="FailedRedirectUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FailedRedirectUrlPropertyName = "failedRedirectUrl";
        
        /// <summary>
        /// Gets or sets the FailedRedirectUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The FailedRedirectUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.Web.FailedRedirectUrlPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string FailedRedirectUrl
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.Web.FailedRedirectUrlPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.Web.FailedRedirectUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region Proxy Property
        /// <summary>
        /// The XML name of the <see cref="Proxy"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ProxyPropertyName = "proxy";
        
        /// <summary>
        /// Gets or sets the Proxy.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Proxy.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.Web.ProxyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Proxy
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.Web.ProxyPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.Web.ProxyPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesigner
{
    
    
    /// <summary>
    /// The OAuthItemConfig Configuration Element.
    /// </summary>
    public partial class OAuthItemConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuthItemConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuthItemConfig.NamePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuthItemConfig.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Clientid Property
        /// <summary>
        /// The XML name of the <see cref="Clientid"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ClientidPropertyName = "clientid";
        
        /// <summary>
        /// Gets or sets the Clientid.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Clientid.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuthItemConfig.ClientidPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Clientid
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuthItemConfig.ClientidPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuthItemConfig.ClientidPropertyName] = value;
            }
        }
        #endregion
        
        #region Clientsecret Property
        /// <summary>
        /// The XML name of the <see cref="Clientsecret"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ClientsecretPropertyName = "clientsecret";
        
        /// <summary>
        /// Gets or sets the Clientsecret.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Clientsecret.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuthItemConfig.ClientsecretPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Clientsecret
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuthItemConfig.ClientsecretPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuthItemConfig.ClientsecretPropertyName] = value;
            }
        }
        #endregion
        
        #region CallbackUrl Property
        /// <summary>
        /// The XML name of the <see cref="CallbackUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string CallbackUrlPropertyName = "callbackUrl";
        
        /// <summary>
        /// Gets or sets the CallbackUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The CallbackUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuthItemConfig.CallbackUrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="oob")]
        public virtual string CallbackUrl
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuthItemConfig.CallbackUrlPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuthItemConfig.CallbackUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region Scope Property
        /// <summary>
        /// The XML name of the <see cref="Scope"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ScopePropertyName = "scope";
        
        /// <summary>
        /// Gets or sets the Scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Scope.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuthItemConfig.ScopePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Scope
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuthItemConfig.ScopePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuthItemConfig.ScopePropertyName] = value;
            }
        }
        #endregion
        
        #region Endpoint Property
        /// <summary>
        /// The XML name of the <see cref="Endpoint"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string EndpointPropertyName = "endpoint";
        
        /// <summary>
        /// Gets or sets the Endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Endpoint.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.OAuthItemConfig.EndpointPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Endpoint
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.OAuthItemConfig.EndpointPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.OAuthItemConfig.EndpointPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesigner
{
    
    
    /// <summary>
    /// A collection of ProfileConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ConfigurationSectionDesigner.ProfileConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::ConfigurationSectionDesigner.Profiles.ProfileConfigPropertyName)]
    public partial class Profiles : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ProfileConfigPropertyName = "profile";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::ConfigurationSectionDesigner.Profiles.ProfileConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ConfigurationSectionDesigner.Profiles.ProfileConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ConfigurationSectionDesigner.ProfileConfig)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ConfigurationSectionDesigner.ProfileConfig();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::ConfigurationSectionDesigner.ProfileConfig this[int index]
        {
            get
            {
                return ((global::ConfigurationSectionDesigner.ProfileConfig)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::ConfigurationSectionDesigner.ProfileConfig this[object name]
        {
            get
            {
                return ((global::ConfigurationSectionDesigner.ProfileConfig)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="profile">The <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::ConfigurationSectionDesigner.ProfileConfig profile)
        {
            base.BaseAdd(profile);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="profile">The <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::ConfigurationSectionDesigner.ProfileConfig profile)
        {
            base.BaseRemove(this.GetElementKey(profile));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::ConfigurationSectionDesigner.ProfileConfig GetItemAt(int index)
        {
            return ((global::ConfigurationSectionDesigner.ProfileConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::ConfigurationSectionDesigner.ProfileConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::ConfigurationSectionDesigner.ProfileConfig GetItemByKey(string name)
        {
            return ((global::ConfigurationSectionDesigner.ProfileConfig)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CurrentProfile Property
        /// <summary>
        /// The XML name of the <see cref="CurrentProfile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string CurrentProfilePropertyName = "currentProfile";
        
        /// <summary>
        /// Gets the CurrentProfile.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The CurrentProfile.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.Profiles.CurrentProfilePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string CurrentProfile
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.Profiles.CurrentProfilePropertyName]));
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesigner
{
    
    
    /// <summary>
    /// The ProfileConfig Configuration Element.
    /// </summary>
    public partial class ProfileConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.ProfileConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesigner.ProfileConfig.NamePropertyName]));
            }
        }
        #endregion
        
        #region IsTestSystem Property
        /// <summary>
        /// The XML name of the <see cref="IsTestSystem"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IsTestSystemPropertyName = "isTestSystem";
        
        /// <summary>
        /// Gets or sets the IsTestSystem.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The IsTestSystem.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesigner.ProfileConfig.IsTestSystemPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool IsTestSystem
        {
            get
            {
                return ((bool)(base[global::ConfigurationSectionDesigner.ProfileConfig.IsTestSystemPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesigner.ProfileConfig.IsTestSystemPropertyName] = value;
            }
        }
        #endregion
    }
}
